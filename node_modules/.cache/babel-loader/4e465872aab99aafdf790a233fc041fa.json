{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Checkbox = require('../Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nvar _TableRowColumn = require('./TableRowColumn');\n\nvar _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);\n\nvar _ClickAwayListener = require('../internal/ClickAwayListener');\n\nvar _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TableBody = function (_Component) {\n  _inherits(TableBody, _Component);\n\n  function TableBody() {\n    var _Object$getPrototypeO;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableBody);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TableBody)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {\n      selectedRows: []\n    }, _this.handleClickAway = function () {\n      if (_this.props.deselectOnClickaway && _this.state.selectedRows.length) {\n        _this.setState({\n          selectedRows: []\n        });\n\n        if (_this.props.onRowSelection) {\n          _this.props.onRowSelection([]);\n        }\n      }\n    }, _this.onRowClick = function (event, rowNumber) {\n      event.stopPropagation();\n\n      if (_this.props.selectable) {\n        // Prevent text selection while selecting rows.\n        window.getSelection().removeAllRanges();\n\n        _this.processRowSelection(event, rowNumber);\n      }\n    }, _this.onCellClick = function (event, rowNumber, columnNumber) {\n      event.stopPropagation();\n\n      if (_this.props.onCellClick) {\n        _this.props.onCellClick(rowNumber, _this.getColumnId(columnNumber), event);\n      }\n    }, _this.onCellHover = function (event, rowNumber, columnNumber) {\n      if (_this.props.onCellHover) {\n        _this.props.onCellHover(rowNumber, _this.getColumnId(columnNumber), event);\n      }\n\n      _this.onRowHover(event, rowNumber);\n    }, _this.onCellHoverExit = function (event, rowNumber, columnNumber) {\n      if (_this.props.onCellHoverExit) {\n        _this.props.onCellHoverExit(rowNumber, _this.getColumnId(columnNumber), event);\n      }\n\n      _this.onRowHoverExit(event, rowNumber);\n    }, _this.onRowHover = function (event, rowNumber) {\n      if (_this.props.onRowHover) {\n        _this.props.onRowHover(rowNumber);\n      }\n    }, _this.onRowHoverExit = function (event, rowNumber) {\n      if (_this.props.onRowHoverExit) {\n        _this.props.onRowHoverExit(rowNumber);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TableBody, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.setState({\n        selectedRows: this.calculatePreselectedRows(this.props)\n      });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.allRowsSelected && !nextProps.allRowsSelected) {\n        this.setState({\n          selectedRows: this.state.selectedRows.length > 0 ? [this.state.selectedRows[this.state.selectedRows.length - 1]] : []\n        }); // TODO: should else be conditional, not run any time props other than allRowsSelected change?\n      } else {\n        this.setState({\n          selectedRows: this.calculatePreselectedRows(nextProps)\n        });\n      }\n    }\n  }, {\n    key: 'createRows',\n    value: function createRows() {\n      var _this2 = this;\n\n      var numChildren = _react2.default.Children.count(this.props.children);\n\n      var rowNumber = 0;\n      var handlers = {\n        onCellClick: this.onCellClick,\n        onCellHover: this.onCellHover,\n        onCellHoverExit: this.onCellHoverExit,\n        onRowHover: this.onRowHover,\n        onRowHoverExit: this.onRowHoverExit,\n        onRowClick: this.onRowClick\n      };\n      return _react2.default.Children.map(this.props.children, function (child) {\n        if (_react2.default.isValidElement(child)) {\n          var _ret2 = function () {\n            var props = {\n              hoverable: _this2.props.showRowHover,\n              selected: _this2.isRowSelected(rowNumber),\n              striped: _this2.props.stripedRows && rowNumber % 2 === 0,\n              rowNumber: rowNumber++\n            };\n\n            if (rowNumber === numChildren) {\n              props.displayBorder = false;\n            }\n\n            var children = [_this2.createRowCheckboxColumn(props)];\n\n            _react2.default.Children.forEach(child.props.children, function (child) {\n              children.push(child);\n            });\n\n            return {\n              v: _react2.default.cloneElement(child, _extends({}, props, handlers), children)\n            };\n          }();\n\n          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n        }\n      });\n    }\n  }, {\n    key: 'createRowCheckboxColumn',\n    value: function createRowCheckboxColumn(rowProps) {\n      if (!this.props.displayRowCheckbox) {\n        return null;\n      }\n\n      var key = rowProps.rowNumber + '-cb';\n      var disabled = !this.props.selectable;\n\n      var checkbox = _react2.default.createElement(_Checkbox2.default, {\n        ref: 'rowSelectCB',\n        name: key,\n        value: 'selected',\n        disabled: disabled,\n        checked: rowProps.selected\n      });\n\n      return _react2.default.createElement(_TableRowColumn2.default, {\n        key: key,\n        columnNumber: 0,\n        style: {\n          width: 24,\n          cursor: disabled ? 'not-allowed' : 'inherit'\n        }\n      }, checkbox);\n    }\n  }, {\n    key: 'calculatePreselectedRows',\n    value: function calculatePreselectedRows(props) {\n      // Determine what rows are 'pre-selected'.\n      var preSelectedRows = [];\n\n      if (props.selectable && props.preScanRows) {\n        (function () {\n          var index = 0;\n\n          _react2.default.Children.forEach(props.children, function (child) {\n            if (_react2.default.isValidElement(child)) {\n              if (child.props.selected && (preSelectedRows.length === 0 || props.multiSelectable)) {\n                preSelectedRows.push(index);\n              }\n\n              index++;\n            }\n          });\n        })();\n      }\n\n      return preSelectedRows;\n    }\n  }, {\n    key: 'isRowSelected',\n    value: function isRowSelected(rowNumber) {\n      if (this.props.allRowsSelected) {\n        return true;\n      }\n\n      for (var i = 0; i < this.state.selectedRows.length; i++) {\n        var selection = this.state.selectedRows[i];\n\n        if ((typeof selection === 'undefined' ? 'undefined' : _typeof(selection)) === 'object') {\n          if (this.isValueInRange(rowNumber, selection)) return true;\n        } else {\n          if (selection === rowNumber) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: 'isValueInRange',\n    value: function isValueInRange(value, range) {\n      if (!range) return false;\n\n      if (range.start <= value && value <= range.end || range.end <= value && value <= range.start) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'processRowSelection',\n    value: function processRowSelection(event, rowNumber) {\n      var selectedRows = this.state.selectedRows;\n\n      if (event.shiftKey && this.props.multiSelectable && selectedRows.length) {\n        var lastIndex = selectedRows.length - 1;\n        var lastSelection = selectedRows[lastIndex];\n\n        if ((typeof lastSelection === 'undefined' ? 'undefined' : _typeof(lastSelection)) === 'object') {\n          lastSelection.end = rowNumber;\n        } else {\n          selectedRows.splice(lastIndex, 1, {\n            start: lastSelection,\n            end: rowNumber\n          });\n        }\n      } else if ((event.ctrlKey && !event.metaKey || event.metaKey && !event.ctrlKey) && this.props.multiSelectable) {\n        var idx = selectedRows.indexOf(rowNumber);\n\n        if (idx < 0) {\n          var foundRange = false;\n\n          for (var i = 0; i < selectedRows.length; i++) {\n            var range = selectedRows[i];\n            if ((typeof range === 'undefined' ? 'undefined' : _typeof(range)) !== 'object') continue;\n\n            if (this.isValueInRange(rowNumber, range)) {\n              var _selectedRows;\n\n              foundRange = true;\n              var values = this.splitRange(range, rowNumber);\n\n              (_selectedRows = selectedRows).splice.apply(_selectedRows, [i, 1].concat(_toConsumableArray(values)));\n            }\n          }\n\n          if (!foundRange) selectedRows.push(rowNumber);\n        } else {\n          selectedRows.splice(idx, 1);\n        }\n      } else {\n        if (selectedRows.length === 1 && selectedRows[0] === rowNumber) {\n          selectedRows = [];\n        } else {\n          selectedRows = [rowNumber];\n        }\n      }\n\n      this.setState({\n        selectedRows: selectedRows\n      });\n      if (this.props.onRowSelection) this.props.onRowSelection(this.flattenRanges(selectedRows));\n    }\n  }, {\n    key: 'splitRange',\n    value: function splitRange(range, splitPoint) {\n      var splitValues = [];\n      var startOffset = range.start - splitPoint;\n      var endOffset = range.end - splitPoint; // Process start half\n\n      splitValues.push.apply(splitValues, _toConsumableArray(this.genRangeOfValues(splitPoint, startOffset))); // Process end half\n\n      splitValues.push.apply(splitValues, _toConsumableArray(this.genRangeOfValues(splitPoint, endOffset)));\n      return splitValues;\n    }\n  }, {\n    key: 'genRangeOfValues',\n    value: function genRangeOfValues(start, offset) {\n      var values = [];\n      var dir = offset > 0 ? -1 : 1; // This forces offset to approach 0 from either direction.\n\n      while (offset !== 0) {\n        values.push(start + offset);\n        offset += dir;\n      }\n\n      return values;\n    }\n  }, {\n    key: 'flattenRanges',\n    value: function flattenRanges(selectedRows) {\n      var rows = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = selectedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var selection = _step.value;\n\n          if ((typeof selection === 'undefined' ? 'undefined' : _typeof(selection)) === 'object') {\n            var values = this.genRangeOfValues(selection.end, selection.start - selection.end);\n            rows.push.apply(rows, [selection.end].concat(_toConsumableArray(values)));\n          } else {\n            rows.push(selection);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return rows.sort();\n    }\n  }, {\n    key: 'getColumnId',\n    value: function getColumnId(columnNumber) {\n      var columnId = columnNumber;\n\n      if (this.props.displayRowCheckbox) {\n        columnId--;\n      }\n\n      return columnId;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var className = _props.className;\n      var style = _props.style;\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n      return _react2.default.createElement(_ClickAwayListener2.default, {\n        onClickAway: this.handleClickAway\n      }, _react2.default.createElement('tbody', {\n        className: className,\n        style: prepareStyles((0, _simpleAssign2.default)({}, style))\n      }, this.createRows()));\n    }\n  }]);\n\n  return TableBody;\n}(_react.Component);\n\nTableBody.muiName = 'TableBody';\nTableBody.propTypes = {\n  /**\n   * @ignore\n   * Set to true to indicate that all rows should be selected.\n   */\n  allRowsSelected: _react.PropTypes.bool,\n\n  /**\n   * Children passed to table body.\n   */\n  children: _react.PropTypes.node,\n\n  /**\n   * The css class name of the root element.\n   */\n  className: _react.PropTypes.string,\n\n  /**\n   * Controls whether or not to deselect all selected\n   * rows after clicking outside the table.\n   */\n  deselectOnClickaway: _react.PropTypes.bool,\n\n  /**\n   * Controls the display of the row checkbox. The default value is true.\n   */\n  displayRowCheckbox: _react.PropTypes.bool,\n\n  /**\n   * @ignore\n   * If true, multiple table rows can be selected.\n   * CTRL/CMD+Click and SHIFT+Click are valid actions.\n   * The default value is false.\n   */\n  multiSelectable: _react.PropTypes.bool,\n\n  /**\n   * @ignore\n   * Callback function for when a cell is clicked.\n   */\n  onCellClick: _react.PropTypes.func,\n\n  /**\n   * @ignore\n   * Called when a table cell is hovered. rowNumber\n   * is the row number of the hovered row and columnId\n   * is the column number or the column key of the cell.\n   */\n  onCellHover: _react.PropTypes.func,\n\n  /**\n   * @ignore\n   * Called when a table cell is no longer hovered.\n   * rowNumber is the row number of the row and columnId\n   * is the column number or the column key of the cell.\n   */\n  onCellHoverExit: _react.PropTypes.func,\n\n  /**\n   * @ignore\n   * Called when a table row is hovered.\n   * rowNumber is the row number of the hovered row.\n   */\n  onRowHover: _react.PropTypes.func,\n\n  /**\n   * @ignore\n   * Called when a table row is no longer\n   * hovered. rowNumber is the row number of the row\n   * that is no longer hovered.\n   */\n  onRowHoverExit: _react.PropTypes.func,\n\n  /**\n   * @ignore\n   * Called when a row is selected. selectedRows is an\n   * array of all row selections. IF all rows have been selected,\n   * the string \"all\" will be returned instead to indicate that\n   * all rows have been selected.\n   */\n  onRowSelection: _react.PropTypes.func,\n\n  /**\n   * Controls whether or not the rows are pre-scanned to determine\n   * initial state. If your table has a large number of rows and\n   * you are experiencing a delay in rendering, turn off this property.\n   */\n  preScanRows: _react.PropTypes.bool,\n\n  /**\n   * @ignore\n   * If true, table rows can be selected. If multiple\n   * row selection is desired, enable multiSelectable.\n   * The default value is true.\n   */\n  selectable: _react.PropTypes.bool,\n\n  /**\n   * If true, table rows will be highlighted when\n   * the cursor is hovering over the row. The default\n   * value is false.\n   */\n  showRowHover: _react.PropTypes.bool,\n\n  /**\n   * If true, every other table row starting\n   * with the first row will be striped. The default value is false.\n   */\n  stripedRows: _react.PropTypes.bool,\n\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _react.PropTypes.object\n};\nTableBody.defaultProps = {\n  allRowsSelected: false,\n  deselectOnClickaway: true,\n  displayRowCheckbox: true,\n  multiSelectable: false,\n  preScanRows: true,\n  selectable: true,\n  style: {}\n};\nTableBody.contextTypes = {\n  muiTheme: _react.PropTypes.object.isRequired\n};\nexports.default = TableBody;","map":{"version":3,"sources":["C:/Users/mamoussa/project/moc/node_modules/material-editable-table/node_modules/material-ui/Table/TableBody.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_simpleAssign","require","_simpleAssign2","_interopRequireDefault","_react","_react2","_Checkbox","_Checkbox2","_TableRowColumn","_TableRowColumn2","_ClickAwayListener","_ClickAwayListener2","__esModule","default","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","TableBody","_Component","_Object$getPrototypeO","_temp","_this","_ret","_len","args","_key","getPrototypeOf","apply","concat","state","selectedRows","handleClickAway","deselectOnClickaway","setState","onRowSelection","onRowClick","event","rowNumber","stopPropagation","selectable","window","getSelection","removeAllRanges","processRowSelection","onCellClick","columnNumber","getColumnId","onCellHover","onRowHover","onCellHoverExit","onRowHoverExit","componentWillMount","calculatePreselectedRows","componentWillReceiveProps","nextProps","allRowsSelected","createRows","_this2","numChildren","Children","count","children","handlers","map","child","isValidElement","_ret2","hoverable","showRowHover","selected","isRowSelected","striped","stripedRows","displayBorder","createRowCheckboxColumn","forEach","push","v","cloneElement","rowProps","displayRowCheckbox","disabled","checkbox","createElement","ref","name","checked","style","width","cursor","preSelectedRows","preScanRows","index","multiSelectable","selection","isValueInRange","range","start","end","shiftKey","lastIndex","lastSelection","splice","ctrlKey","metaKey","idx","indexOf","foundRange","_selectedRows","values","splitRange","flattenRanges","splitPoint","splitValues","startOffset","endOffset","genRangeOfValues","offset","dir","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","_step","next","done","err","return","sort","columnId","render","_props","className","prepareStyles","context","muiTheme","onClickAway","Component","muiName","propTypes","PropTypes","bool","node","string","func","object","defaultProps","contextTypes","isRequired"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Checkbox = require('../Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nvar _TableRowColumn = require('./TableRowColumn');\n\nvar _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);\n\nvar _ClickAwayListener = require('../internal/ClickAwayListener');\n\nvar _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TableBody = function (_Component) {\n  _inherits(TableBody, _Component);\n\n  function TableBody() {\n    var _Object$getPrototypeO;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableBody);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TableBody)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {\n      selectedRows: []\n    }, _this.handleClickAway = function () {\n      if (_this.props.deselectOnClickaway && _this.state.selectedRows.length) {\n        _this.setState({\n          selectedRows: []\n        });\n        if (_this.props.onRowSelection) {\n          _this.props.onRowSelection([]);\n        }\n      }\n    }, _this.onRowClick = function (event, rowNumber) {\n      event.stopPropagation();\n\n      if (_this.props.selectable) {\n        // Prevent text selection while selecting rows.\n        window.getSelection().removeAllRanges();\n        _this.processRowSelection(event, rowNumber);\n      }\n    }, _this.onCellClick = function (event, rowNumber, columnNumber) {\n      event.stopPropagation();\n      if (_this.props.onCellClick) {\n        _this.props.onCellClick(rowNumber, _this.getColumnId(columnNumber), event);\n      }\n    }, _this.onCellHover = function (event, rowNumber, columnNumber) {\n      if (_this.props.onCellHover) {\n        _this.props.onCellHover(rowNumber, _this.getColumnId(columnNumber), event);\n      }\n      _this.onRowHover(event, rowNumber);\n    }, _this.onCellHoverExit = function (event, rowNumber, columnNumber) {\n      if (_this.props.onCellHoverExit) {\n        _this.props.onCellHoverExit(rowNumber, _this.getColumnId(columnNumber), event);\n      }\n      _this.onRowHoverExit(event, rowNumber);\n    }, _this.onRowHover = function (event, rowNumber) {\n      if (_this.props.onRowHover) {\n        _this.props.onRowHover(rowNumber);\n      }\n    }, _this.onRowHoverExit = function (event, rowNumber) {\n      if (_this.props.onRowHoverExit) {\n        _this.props.onRowHoverExit(rowNumber);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TableBody, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.setState({ selectedRows: this.calculatePreselectedRows(this.props) });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.allRowsSelected && !nextProps.allRowsSelected) {\n        this.setState({\n          selectedRows: this.state.selectedRows.length > 0 ? [this.state.selectedRows[this.state.selectedRows.length - 1]] : []\n        });\n        // TODO: should else be conditional, not run any time props other than allRowsSelected change?\n      } else {\n        this.setState({\n          selectedRows: this.calculatePreselectedRows(nextProps)\n        });\n      }\n    }\n  }, {\n    key: 'createRows',\n    value: function createRows() {\n      var _this2 = this;\n\n      var numChildren = _react2.default.Children.count(this.props.children);\n      var rowNumber = 0;\n      var handlers = {\n        onCellClick: this.onCellClick,\n        onCellHover: this.onCellHover,\n        onCellHoverExit: this.onCellHoverExit,\n        onRowHover: this.onRowHover,\n        onRowHoverExit: this.onRowHoverExit,\n        onRowClick: this.onRowClick\n      };\n\n      return _react2.default.Children.map(this.props.children, function (child) {\n        if (_react2.default.isValidElement(child)) {\n          var _ret2 = function () {\n            var props = {\n              hoverable: _this2.props.showRowHover,\n              selected: _this2.isRowSelected(rowNumber),\n              striped: _this2.props.stripedRows && rowNumber % 2 === 0,\n              rowNumber: rowNumber++\n            };\n\n            if (rowNumber === numChildren) {\n              props.displayBorder = false;\n            }\n\n            var children = [_this2.createRowCheckboxColumn(props)];\n\n            _react2.default.Children.forEach(child.props.children, function (child) {\n              children.push(child);\n            });\n\n            return {\n              v: _react2.default.cloneElement(child, _extends({}, props, handlers), children)\n            };\n          }();\n\n          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n        }\n      });\n    }\n  }, {\n    key: 'createRowCheckboxColumn',\n    value: function createRowCheckboxColumn(rowProps) {\n      if (!this.props.displayRowCheckbox) {\n        return null;\n      }\n\n      var key = rowProps.rowNumber + '-cb';\n      var disabled = !this.props.selectable;\n      var checkbox = _react2.default.createElement(_Checkbox2.default, {\n        ref: 'rowSelectCB',\n        name: key,\n        value: 'selected',\n        disabled: disabled,\n        checked: rowProps.selected\n      });\n\n      return _react2.default.createElement(\n        _TableRowColumn2.default,\n        {\n          key: key,\n          columnNumber: 0,\n          style: {\n            width: 24,\n            cursor: disabled ? 'not-allowed' : 'inherit'\n          }\n        },\n        checkbox\n      );\n    }\n  }, {\n    key: 'calculatePreselectedRows',\n    value: function calculatePreselectedRows(props) {\n      // Determine what rows are 'pre-selected'.\n      var preSelectedRows = [];\n\n      if (props.selectable && props.preScanRows) {\n        (function () {\n          var index = 0;\n          _react2.default.Children.forEach(props.children, function (child) {\n            if (_react2.default.isValidElement(child)) {\n              if (child.props.selected && (preSelectedRows.length === 0 || props.multiSelectable)) {\n                preSelectedRows.push(index);\n              }\n\n              index++;\n            }\n          });\n        })();\n      }\n\n      return preSelectedRows;\n    }\n  }, {\n    key: 'isRowSelected',\n    value: function isRowSelected(rowNumber) {\n      if (this.props.allRowsSelected) {\n        return true;\n      }\n\n      for (var i = 0; i < this.state.selectedRows.length; i++) {\n        var selection = this.state.selectedRows[i];\n\n        if ((typeof selection === 'undefined' ? 'undefined' : _typeof(selection)) === 'object') {\n          if (this.isValueInRange(rowNumber, selection)) return true;\n        } else {\n          if (selection === rowNumber) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: 'isValueInRange',\n    value: function isValueInRange(value, range) {\n      if (!range) return false;\n\n      if (range.start <= value && value <= range.end || range.end <= value && value <= range.start) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'processRowSelection',\n    value: function processRowSelection(event, rowNumber) {\n      var selectedRows = this.state.selectedRows;\n\n      if (event.shiftKey && this.props.multiSelectable && selectedRows.length) {\n        var lastIndex = selectedRows.length - 1;\n        var lastSelection = selectedRows[lastIndex];\n\n        if ((typeof lastSelection === 'undefined' ? 'undefined' : _typeof(lastSelection)) === 'object') {\n          lastSelection.end = rowNumber;\n        } else {\n          selectedRows.splice(lastIndex, 1, { start: lastSelection, end: rowNumber });\n        }\n      } else if ((event.ctrlKey && !event.metaKey || event.metaKey && !event.ctrlKey) && this.props.multiSelectable) {\n        var idx = selectedRows.indexOf(rowNumber);\n        if (idx < 0) {\n          var foundRange = false;\n          for (var i = 0; i < selectedRows.length; i++) {\n            var range = selectedRows[i];\n            if ((typeof range === 'undefined' ? 'undefined' : _typeof(range)) !== 'object') continue;\n\n            if (this.isValueInRange(rowNumber, range)) {\n              var _selectedRows;\n\n              foundRange = true;\n              var values = this.splitRange(range, rowNumber);\n              (_selectedRows = selectedRows).splice.apply(_selectedRows, [i, 1].concat(_toConsumableArray(values)));\n            }\n          }\n\n          if (!foundRange) selectedRows.push(rowNumber);\n        } else {\n          selectedRows.splice(idx, 1);\n        }\n      } else {\n        if (selectedRows.length === 1 && selectedRows[0] === rowNumber) {\n          selectedRows = [];\n        } else {\n          selectedRows = [rowNumber];\n        }\n      }\n\n      this.setState({ selectedRows: selectedRows });\n      if (this.props.onRowSelection) this.props.onRowSelection(this.flattenRanges(selectedRows));\n    }\n  }, {\n    key: 'splitRange',\n    value: function splitRange(range, splitPoint) {\n      var splitValues = [];\n      var startOffset = range.start - splitPoint;\n      var endOffset = range.end - splitPoint;\n\n      // Process start half\n      splitValues.push.apply(splitValues, _toConsumableArray(this.genRangeOfValues(splitPoint, startOffset)));\n\n      // Process end half\n      splitValues.push.apply(splitValues, _toConsumableArray(this.genRangeOfValues(splitPoint, endOffset)));\n\n      return splitValues;\n    }\n  }, {\n    key: 'genRangeOfValues',\n    value: function genRangeOfValues(start, offset) {\n      var values = [];\n      var dir = offset > 0 ? -1 : 1; // This forces offset to approach 0 from either direction.\n      while (offset !== 0) {\n        values.push(start + offset);\n        offset += dir;\n      }\n\n      return values;\n    }\n  }, {\n    key: 'flattenRanges',\n    value: function flattenRanges(selectedRows) {\n      var rows = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = selectedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var selection = _step.value;\n\n          if ((typeof selection === 'undefined' ? 'undefined' : _typeof(selection)) === 'object') {\n            var values = this.genRangeOfValues(selection.end, selection.start - selection.end);\n            rows.push.apply(rows, [selection.end].concat(_toConsumableArray(values)));\n          } else {\n            rows.push(selection);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return rows.sort();\n    }\n  }, {\n    key: 'getColumnId',\n    value: function getColumnId(columnNumber) {\n      var columnId = columnNumber;\n      if (this.props.displayRowCheckbox) {\n        columnId--;\n      }\n\n      return columnId;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var className = _props.className;\n      var style = _props.style;\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n\n\n      return _react2.default.createElement(\n        _ClickAwayListener2.default,\n        { onClickAway: this.handleClickAway },\n        _react2.default.createElement(\n          'tbody',\n          { className: className, style: prepareStyles((0, _simpleAssign2.default)({}, style)) },\n          this.createRows()\n        )\n      );\n    }\n  }]);\n\n  return TableBody;\n}(_react.Component);\n\nTableBody.muiName = 'TableBody';\nTableBody.propTypes = {\n  /**\n   * @ignore\n   * Set to true to indicate that all rows should be selected.\n   */\n  allRowsSelected: _react.PropTypes.bool,\n  /**\n   * Children passed to table body.\n   */\n  children: _react.PropTypes.node,\n  /**\n   * The css class name of the root element.\n   */\n  className: _react.PropTypes.string,\n  /**\n   * Controls whether or not to deselect all selected\n   * rows after clicking outside the table.\n   */\n  deselectOnClickaway: _react.PropTypes.bool,\n  /**\n   * Controls the display of the row checkbox. The default value is true.\n   */\n  displayRowCheckbox: _react.PropTypes.bool,\n  /**\n   * @ignore\n   * If true, multiple table rows can be selected.\n   * CTRL/CMD+Click and SHIFT+Click are valid actions.\n   * The default value is false.\n   */\n  multiSelectable: _react.PropTypes.bool,\n  /**\n   * @ignore\n   * Callback function for when a cell is clicked.\n   */\n  onCellClick: _react.PropTypes.func,\n  /**\n   * @ignore\n   * Called when a table cell is hovered. rowNumber\n   * is the row number of the hovered row and columnId\n   * is the column number or the column key of the cell.\n   */\n  onCellHover: _react.PropTypes.func,\n  /**\n   * @ignore\n   * Called when a table cell is no longer hovered.\n   * rowNumber is the row number of the row and columnId\n   * is the column number or the column key of the cell.\n   */\n  onCellHoverExit: _react.PropTypes.func,\n  /**\n   * @ignore\n   * Called when a table row is hovered.\n   * rowNumber is the row number of the hovered row.\n   */\n  onRowHover: _react.PropTypes.func,\n  /**\n   * @ignore\n   * Called when a table row is no longer\n   * hovered. rowNumber is the row number of the row\n   * that is no longer hovered.\n   */\n  onRowHoverExit: _react.PropTypes.func,\n  /**\n   * @ignore\n   * Called when a row is selected. selectedRows is an\n   * array of all row selections. IF all rows have been selected,\n   * the string \"all\" will be returned instead to indicate that\n   * all rows have been selected.\n   */\n  onRowSelection: _react.PropTypes.func,\n  /**\n   * Controls whether or not the rows are pre-scanned to determine\n   * initial state. If your table has a large number of rows and\n   * you are experiencing a delay in rendering, turn off this property.\n   */\n  preScanRows: _react.PropTypes.bool,\n  /**\n   * @ignore\n   * If true, table rows can be selected. If multiple\n   * row selection is desired, enable multiSelectable.\n   * The default value is true.\n   */\n  selectable: _react.PropTypes.bool,\n  /**\n   * If true, table rows will be highlighted when\n   * the cursor is hovering over the row. The default\n   * value is false.\n   */\n  showRowHover: _react.PropTypes.bool,\n  /**\n   * If true, every other table row starting\n   * with the first row will be striped. The default value is false.\n   */\n  stripedRows: _react.PropTypes.bool,\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _react.PropTypes.object\n};\nTableBody.defaultProps = {\n  allRowsSelected: false,\n  deselectOnClickaway: true,\n  displayRowCheckbox: true,\n  multiSelectable: false,\n  preScanRows: true,\n  selectable: true,\n  style: {}\n};\nTableBody.contextTypes = {\n  muiTheme: _react.PropTypes.object.isRequired\n};\nexports.default = TableBody;"]},"metadata":{},"sourceType":"script"}