{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\mamoussa\\\\project\\\\moc\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\mamoussa\\\\project\\\\moc\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import clsx from'clsx';import moment from'moment';import PerfectScrollbar from'react-perfect-scrollbar';import{makeStyles}from'@material-ui/styles';import{Card,CardActions,CardContent,Avatar,Checkbox,Table,TableBody,TableCell,TableHead,TableRow,Typography,TablePagination}from'@material-ui/core';import{getInitials}from'helpers';var useStyles=makeStyles(function(theme){return{root:{},content:{padding:0},inner:{minWidth:1050},nameContainer:{display:'flex',alignItems:'center'},avatar:{marginRight:theme.spacing(2)},actions:{justifyContent:'flex-end'}};});var UsersTable=function UsersTable(props){var className=props.className,users=props.users,rest=_objectWithoutProperties(props,[\"className\",\"users\"]);var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedUsers=_useState2[0],setSelectedUsers=_useState2[1];var _useState3=useState(10),_useState4=_slicedToArray(_useState3,2),rowsPerPage=_useState4[0],setRowsPerPage=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var handleSelectAll=function handleSelectAll(event){var users=props.users;var selectedUsers;if(event.target.checked){selectedUsers=users.map(function(user){return user.id;});}else{selectedUsers=[];}setSelectedUsers(selectedUsers);};var handleSelectOne=function handleSelectOne(event,id){var selectedIndex=selectedUsers.indexOf(id);var newSelectedUsers=[];if(selectedIndex===-1){newSelectedUsers=newSelectedUsers.concat(selectedUsers,id);}else if(selectedIndex===0){newSelectedUsers=newSelectedUsers.concat(selectedUsers.slice(1));}else if(selectedIndex===selectedUsers.length-1){newSelectedUsers=newSelectedUsers.concat(selectedUsers.slice(0,-1));}else if(selectedIndex>0){newSelectedUsers=newSelectedUsers.concat(selectedUsers.slice(0,selectedIndex),selectedUsers.slice(selectedIndex+1));}setSelectedUsers(newSelectedUsers);};var handlePageChange=function handlePageChange(event,page){setPage(page);};var handleRowsPerPageChange=function handleRowsPerPageChange(event){setRowsPerPage(event.target.value);};return React.createElement(Card,Object.assign({},rest,{className:clsx(classes.root,className)}),React.createElement(CardContent,{className:classes.content},React.createElement(PerfectScrollbar,null,React.createElement(\"div\",{className:classes.inner},React.createElement(Table,null,React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,{padding:\"checkbox\"},React.createElement(Checkbox,{checked:selectedUsers.length===users.length,color:\"primary\",indeterminate:selectedUsers.length>0&&selectedUsers.length<users.length,onChange:handleSelectAll})),React.createElement(TableCell,null,\"Name\"),React.createElement(TableCell,null,\"Email\"),React.createElement(TableCell,null,\"Location\"),React.createElement(TableCell,null,\"Phone\"),React.createElement(TableCell,null,\"Registration date\"))),React.createElement(TableBody,null,users.slice(0,rowsPerPage).map(function(user){return React.createElement(TableRow,{className:classes.tableRow,hover:true,key:user.id,selected:selectedUsers.indexOf(user.id)!==-1},React.createElement(TableCell,{padding:\"checkbox\"},React.createElement(Checkbox,{checked:selectedUsers.indexOf(user.id)!==-1,color:\"primary\",onChange:function onChange(event){return handleSelectOne(event,user.id);},value:\"true\"})),React.createElement(TableCell,null,React.createElement(\"div\",{className:classes.nameContainer},React.createElement(Avatar,{className:classes.avatar,src:user.avatarUrl},getInitials(user.name)),React.createElement(Typography,{variant:\"body1\"},user.name))),React.createElement(TableCell,null,user.email),React.createElement(TableCell,null,user.address.city,\", \",user.address.state,\",\",' ',user.address.country),React.createElement(TableCell,null,user.phone),React.createElement(TableCell,null,moment(user.createdAt).format('DD/MM/YYYY')));})))))),React.createElement(CardActions,{className:classes.actions},React.createElement(TablePagination,{component:\"div\",count:users.length,onChangePage:handlePageChange,onChangeRowsPerPage:handleRowsPerPageChange,page:page,rowsPerPage:rowsPerPage,rowsPerPageOptions:[5,10,25]})));};export default UsersTable;","map":{"version":3,"sources":["C:/Users/mamoussa/project/moc/src/views/UserList/components/UsersTable/UsersTable.js"],"names":["React","useState","clsx","moment","PerfectScrollbar","makeStyles","Card","CardActions","CardContent","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","getInitials","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","UsersTable","props","className","users","rest","classes","selectedUsers","setSelectedUsers","rowsPerPage","setRowsPerPage","page","setPage","handleSelectAll","event","target","checked","map","user","id","handleSelectOne","selectedIndex","indexOf","newSelectedUsers","concat","slice","length","handlePageChange","handleRowsPerPageChange","value","tableRow","avatarUrl","name","email","address","city","state","country","phone","createdAt","format"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\nimport { getInitials } from 'helpers';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    const { users } = props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Registration date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.slice(0, rowsPerPage).map(user => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={user.id}\n                    selected={selectedUsers.indexOf(user.id) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedUsers.indexOf(user.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, user.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Avatar\n                          className={classes.avatar}\n                          src={user.avatarUrl}\n                        >\n                          {getInitials(user.name)}\n                        </Avatar>\n                        <Typography variant=\"body1\">{user.name}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>\n                      {user.address.city}, {user.address.state},{' '}\n                      {user.address.country}\n                    </TableCell>\n                    <TableCell>{user.phone}</TableCell>\n                    <TableCell>\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={users.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}