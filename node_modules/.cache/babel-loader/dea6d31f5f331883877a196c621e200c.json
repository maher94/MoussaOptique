{"ast":null,"code":"import axios from 'axios';\nimport { Component } from 'react';\nexport const sendDelete = userId => {\n  const baseUrl = `http://localhost:4000/orders/delete/` + userId;\n  axios.get(baseUrl).then(response => {\n    if (response.data.success) {\n      alert(response.data.message);\n    }\n  }).catch(error => {\n    alert(\"Error on delete item\");\n  });\n};\nexport const sendCreate = (orderdate, Category, Products, Status, Comment, qte, pss) => {\n  // url de backend\n  const baseUrl = \"http://localhost:4000/orders/create\"; // parameter data post\n\n  const datapost = {\n    Orderdate: orderdate,\n    Category: Category,\n    Products: Products,\n    Status: Status,\n    Comment: Comment,\n    qte: qte,\n    pss: pss\n  };\n  axios.post(baseUrl, datapost).then(response => {\n    if (response.data.success) {\n      alert(response.data.message);\n    } else {\n      alert(\"Error when creating a new order \");\n    }\n  }).catch(error => {\n    alert(error);\n    console.log(error);\n  });\n};\nexport const updateStatus = orderid => {\n  // url de backend\n  const baseUrl = \"http://localhost:4000/orders/updateStatus/\" + orderid; // parameter data post\n\n  const datapost = {\n    Status: \"WaitingValidation\"\n  };\n  axios.post(baseUrl, datapost).then(response => {\n    if (response.data.success) {\n      alert(response.data.message);\n    } else {\n      alert(\"Error when updating status \");\n    }\n  }).catch(error => {\n    alert(error);\n    console.log(error);\n  });\n};\nexport const sendUpdate = (Orderdate, Category, Products, Status, Comment, qte, pss, orderid) => {\n  // url de backend\n  const baseUrl = \"http://localhost:4000/orders/update/\" + orderid; // parameter data post\n\n  const datapost = {\n    Orderdate: Orderdate,\n    Category: Category,\n    Products: Products,\n    Status: Status,\n    Comment: Comment,\n    qte: qte,\n    pss: pss\n  };\n  axios.post(baseUrl, datapost).then(response => {\n    if (response.data.success) {\n      alert(response.data.message);\n    } else {\n      alert(\"Error when updating data\");\n    }\n  }).catch(error => {\n    alert(error);\n    console.log(error);\n  });\n};\nexport const getCountNborders = _ => {\n  axios.get('http://localhost:4000/orders/countall').then(function (response) {\n    // handle success\n    return response.data.count;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport default {\n  sendDelete,\n  sendCreate\n};","map":{"version":3,"sources":["C:/Users/mamoussa/project/moc/src/views/Orders/OrderManagement/api/OrderAPI.js"],"names":["axios","Component","sendDelete","userId","baseUrl","get","then","response","data","success","alert","message","catch","error","sendCreate","orderdate","Category","Products","Status","Comment","qte","pss","datapost","Orderdate","post","console","log","updateStatus","orderid","sendUpdate","getCountNborders","_","count"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAGA,OAAO,MAAOC,UAAU,GAAEC,MAAD,IAAU;AAE/B,QAAMC,OAAO,GAAI,sCAAD,GAAuCD,MAAvD;AAEAH,EAAAA,KAAK,CAACK,GAAN,CAAUD,OAAV,EACCE,IADD,CACMC,QAAQ,IAAG;AACf,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBC,MAAAA,KAAK,CAACH,QAAQ,CAACC,IAAT,CAAcG,OAAf,CAAL;AACD;AACF,GALD,EAMCC,KAND,CAMSC,KAAK,IAAI;AAChBH,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,GARD;AASD,CAbI;AAcL,OAAO,MAAOI,UAAU,GAAC,CAACC,SAAD,EAAWC,QAAX,EAAoBC,QAApB,EAA6BC,MAA7B,EAAoCC,OAApC,EAA4CC,GAA5C,EAAgDC,GAAhD,KAAsD;AAG7E;AACA,QAAMjB,OAAO,GAAG,qCAAhB,CAJ6E,CAK7E;;AACA,QAAMkB,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAACR,SADK;AAEfC,IAAAA,QAAQ,EAACA,QAFM;AAGfC,IAAAA,QAAQ,EAACA,QAHM;AAIfC,IAAAA,MAAM,EAACA,MAJQ;AAKfC,IAAAA,OAAO,EAACA,OALO;AAMfC,IAAAA,GAAG,EAACA,GANW;AAOfC,IAAAA,GAAG,EAACA;AAPW,GAAjB;AAWArB,EAAAA,KAAK,CAACwB,IAAN,CAAWpB,OAAX,EAAmBkB,QAAnB,EACChB,IADD,CACMC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AAC1BC,MAAAA,KAAK,CAACH,QAAQ,CAACC,IAAT,CAAcG,OAAf,CAAL;AACA,KAFD,MAGK;AACHD,MAAAA,KAAK,CAAC,kCAAD,CAAL;AAED;AACF,GATD,EAUCE,KAVD,CAUSC,KAAK,IAAI;AAChBH,IAAAA,KAAK,CAACG,KAAD,CAAL;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,GAbD;AAeD,CAhCM;AAiCP,OAAO,MAAOc,YAAY,GAAEC,OAAD,IAAW;AAIpC;AACA,QAAMxB,OAAO,GAAG,+CAA6CwB,OAA7D,CALoC,CAMpC;;AACA,QAAMN,QAAQ,GAAG;AACfJ,IAAAA,MAAM,EAAC;AADQ,GAAjB;AAKAlB,EAAAA,KAAK,CAACwB,IAAN,CAAWpB,OAAX,EAAmBkB,QAAnB,EACChB,IADD,CACMC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AAE1BC,MAAAA,KAAK,CAACH,QAAQ,CAACC,IAAT,CAAcG,OAAf,CAAL;AACA,KAHD,MAIK;AACHD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AAED;AACF,GAVD,EAWCE,KAXD,CAWSC,KAAK,IAAI;AAChBH,IAAAA,KAAK,CAACG,KAAD,CAAL;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,GAdD;AAgBD,CA5BM;AA8BT,OAAO,MAAOgB,UAAU,GAAC,CAACN,SAAD,EAAWP,QAAX,EAAoBC,QAApB,EAA6BC,MAA7B,EAAoCC,OAApC,EAA4CC,GAA5C,EAAgDC,GAAhD,EAAoDO,OAApD,KAA8D;AAGnF;AACA,QAAMxB,OAAO,GAAG,yCAAuCwB,OAAvD,CAJmF,CAKnF;;AACA,QAAMN,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAACA,SADK;AAEfP,IAAAA,QAAQ,EAACA,QAFM;AAGfC,IAAAA,QAAQ,EAACA,QAHM;AAIfC,IAAAA,MAAM,EAACA,MAJQ;AAKfC,IAAAA,OAAO,EAACA,OALO;AAMfC,IAAAA,GAAG,EAACA,GANW;AAOfC,IAAAA,GAAG,EAACA;AAPW,GAAjB;AAWArB,EAAAA,KAAK,CAACwB,IAAN,CAAWpB,OAAX,EAAmBkB,QAAnB,EACChB,IADD,CACMC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AAC1BC,MAAAA,KAAK,CAACH,QAAQ,CAACC,IAAT,CAAcG,OAAf,CAAL;AACA,KAFD,MAGK;AACHD,MAAAA,KAAK,CAAC,0BAAD,CAAL;AAED;AACF,GATD,EAUCE,KAVD,CAUSC,KAAK,IAAI;AAChBH,IAAAA,KAAK,CAACG,KAAD,CAAL;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,GAbD;AAeD,CAhCI;AAkCL,OAAO,MAAMiB,gBAAgB,GAAEC,CAAC,IAAG;AAIjC/B,EAAAA,KAAK,CAACK,GAAN,CAAU,uCAAV,EACDC,IADC,CACI,UAAUC,QAAV,EAAoB;AACxB;AAED,WAAOA,QAAQ,CAACC,IAAT,CAAcwB,KAArB;AAGA,GAPC,EAQDpB,KARC,CAQK,UAAUC,KAAV,EAAiB;AAEtBY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,GAXC;AAcD,CAlBM;AAqBP,eAAgB;AAACX,EAAAA,UAAD;AAAYY,EAAAA;AAAZ,CAAhB","sourcesContent":["import axios from 'axios';\r\nimport { Component } from 'react';\r\n \r\n \r\nexport const  sendDelete=(userId)=>{\r\n    \r\n    const baseUrl = `http://localhost:4000/orders/delete/`+userId   \r\n     \r\n    axios.get(baseUrl)\r\n    .then(response =>{\r\n      if (response.data.success) {\r\n        alert(response.data.message)\r\n      }\r\n    })\r\n    .catch ( error => {\r\n      alert(\"Error on delete item\")\r\n    })\r\n  }\r\n  export const  sendCreate=(orderdate,Category,Products,Status,Comment,qte,pss)=>{\r\n\r\n   \r\n    // url de backend\r\n    const baseUrl = \"http://localhost:4000/orders/create\"\r\n    // parameter data post\r\n    const datapost = {\r\n      Orderdate:orderdate,\r\n      Category:Category,\r\n      Products:Products,\r\n      Status:Status,\r\n      Comment:Comment,\r\n      qte:qte,\r\n      pss:pss,\r\n       \r\n    }\r\n  \r\n    axios.post(baseUrl,datapost)\r\n    .then(response => {\r\n      if (response.data.success) {\r\n       alert(response.data.message)\r\n      }\r\n      else {\r\n        alert(\"Error when creating a new order \")\r\n       \r\n      }\r\n    })\r\n    .catch ( error => {\r\n      alert(error)\r\n      console.log(error)\r\n    })\r\n  \r\n  }\r\n  export const  updateStatus=(orderid)=>{\r\n\r\n\r\n   \r\n    // url de backend\r\n    const baseUrl = \"http://localhost:4000/orders/updateStatus/\"+orderid\r\n    // parameter data post\r\n    const datapost = {\r\n      Status:\"WaitingValidation\",\r\n          \r\n    }\r\n  \r\n    axios.post(baseUrl,datapost)\r\n    .then(response => {\r\n      if (response.data.success) {\r\n       \r\n       alert(response.data.message)\r\n      }\r\n      else {\r\n        alert(\"Error when updating status \")\r\n       \r\n      }\r\n    })\r\n    .catch ( error => {\r\n      alert(error)\r\n      console.log(error)\r\n    })\r\n  \r\n  }\r\n  \r\nexport const  sendUpdate=(Orderdate,Category,Products,Status,Comment,qte,pss,orderid)=>{\r\n\r\n   \r\n    // url de backend\r\n    const baseUrl = \"http://localhost:4000/orders/update/\"+orderid\r\n    // parameter data post\r\n    const datapost = {\r\n      Orderdate:Orderdate,\r\n      Category:Category,\r\n      Products:Products,\r\n      Status:Status,\r\n      Comment:Comment,\r\n      qte:qte,\r\n      pss:pss,\r\n       \r\n    }\r\n  \r\n    axios.post(baseUrl,datapost)\r\n    .then(response => {\r\n      if (response.data.success) {\r\n       alert(response.data.message)\r\n      }\r\n      else {\r\n        alert(\"Error when updating data\")\r\n       \r\n      }\r\n    })\r\n    .catch ( error => {\r\n      alert(error)\r\n      console.log(error)\r\n    })\r\n  \r\n  }\r\n  \r\n  export const getCountNborders= _ =>{\r\n  \r\n   \r\n    \r\n    axios.get('http://localhost:4000/orders/countall')\r\n  .then(function (response) {\r\n    // handle success\r\n   \r\n   return response.data.count;\r\n    \r\n   \r\n  })\r\n  .catch(function (error) {\r\n    \r\n    console.log(error);\r\n  })\r\n\r\n \r\n  }\r\n \r\n\r\n  export default  {sendDelete,sendCreate}\r\n "]},"metadata":{},"sourceType":"module"}