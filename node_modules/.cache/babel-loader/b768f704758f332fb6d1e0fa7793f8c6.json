{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mamoussa\\\\project\\\\moc\\\\src\\\\views\\\\reports\\\\DashboardView\\\\TrafficByDevice.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, colors, makeStyles, useTheme } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '20%'\n  }\n}));\n\nconst TrafficByDevice = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      data: [1, 15, 22],\n      backgroundColor: ['#BD0A07', \"#259E1A\", \"#FBF269\"],\n      borderWidth: 8,\n      borderColor: colors.common.white,\n      hoverBorderColor: colors.common.white\n    }],\n    labels: ['Rejected', 'Validated', 'Waiting Validation']\n  };\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n  const devices = [{\n    title: 'Rejected',\n    value: 63,\n    icon: LaptopMacIcon,\n    color: '#BD0A07'\n  }, {\n    title: 'Validated',\n    value: 15,\n    icon: TabletIcon,\n    color: \"#259E1A\"\n  }, {\n    title: 'Waiting Validation',\n    value: 23,\n    icon: PhoneIcon,\n    color: \"#FBF269\"\n  }];\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: \"Traffic by Device\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Box, {\n    height: 200,\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, devices.map(({\n    color,\n    title,\n    value\n  }) => React.createElement(Box, {\n    key: title,\n    p: 1,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    style: {\n      color\n    },\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, value, \"%\")))))), React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: \"Traffic by Device\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Box, {\n    height: 300,\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, devices.map(({\n    color,\n    title,\n    value\n  }) => React.createElement(Box, {\n    key: title,\n    p: 1,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    style: {\n      color\n    },\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, value, \"%\")))))));\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\nexport default TrafficByDevice;","map":{"version":3,"sources":["C:/Users/mamoussa/project/moc/src/views/reports/DashboardView/TrafficByDevice.js"],"names":["React","clsx","PropTypes","Doughnut","Box","Card","CardContent","CardHeader","Divider","Typography","colors","makeStyles","useTheme","LaptopMacIcon","PhoneIcon","TabletIcon","useStyles","root","height","TrafficByDevice","className","rest","classes","theme","data","datasets","backgroundColor","borderWidth","borderColor","common","white","hoverBorderColor","labels","options","animation","cutoutPercentage","layout","padding","legend","display","maintainAspectRatio","responsive","tooltips","palette","background","default","bodyFontColor","text","secondary","divider","enabled","footerFontColor","intersect","mode","titleFontColor","primary","devices","title","value","icon","color","map","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '20%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [1, 15, 22],\n        backgroundColor: [\n          '#BD0A07',\"#259E1A\",\"#FBF269\",\n         \n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Rejected', 'Validated', 'Waiting Validation']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Rejected',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: '#BD0A07'\n    },\n    {\n      title: 'Validated',\n      value: 15,\n      icon: TabletIcon,\n      color:\"#259E1A\"\n    },\n    {\n      title: 'Waiting Validation',\n      value: 23,\n      icon: PhoneIcon,\n      color: \"#FBF269\"\n    }\n  ];\n\n  return (\n    <React.Fragment>\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={200}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {devices.map(({\n            color,\n           \n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n             \n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {devices.map(({\n            color,\n           \n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n             \n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n    </React.Fragment>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n"]},"metadata":{},"sourceType":"module"}