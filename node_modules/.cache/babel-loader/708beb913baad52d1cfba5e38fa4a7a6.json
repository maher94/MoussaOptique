{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mamoussa\\\\project\\\\moc\\\\src\\\\views\\\\Orders\\\\OrderManagement\\\\components\\\\ProduitOrders.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\nimport { forwardRef } from 'react';\nimport { saveAs } from 'file-saver';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport pdf from '@material-ui/icons/PictureAsPdf';\nimport Order from \"./Order\";\nimport Refresh from '@material-ui/icons/Autorenew';\nimport * as OrderAPI from \"../api/OrderAPI\";\nconst tableIcons = {\n  Add: forwardRef((props, ref) => React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))),\n  pdf: forwardRef((props, ref) => React.createElement(\"pdf\", Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))\n};\n\nclass ProduitOrders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Order no',\n        field: 'Orderno',\n        editable: 'never',\n        cellStyle: {\n          backgroundColor: '#B1D9FE',\n          color: '#FFF'\n        },\n        headerStyle: {\n          backgroundColor: '#B1D9FE'\n        }\n      }, {\n        title: 'Order date',\n        field: 'Orderdate',\n        type: \"date\"\n      }, {\n        title: 'Category',\n        field: 'Category',\n        lookup: {\n          Produit: 'Produit',\n          Lentille: 'Lentille'\n        }\n      }, {\n        title: 'Products',\n        field: 'Products',\n        lookup: {\n          Releasy: 'Releasy',\n          SkySoft: 'SkySoft'\n        }\n      }, {\n        title: 'Status',\n        field: 'Status',\n        editable: 'never',\n        lookup: {\n          WaitingValidation: \"Waiting Validation\",\n          Draft: \"Draft\",\n          Validated: \"Validated\",\n          Created: \"Created\",\n          Rejected: \"Rejected\"\n        },\n        cellStyle: {\n          backgroundColor: 'yellow'\n        }\n      }, {\n        title: 'Comment',\n        field: 'Comment'\n      }, {\n        title: 'Quantity',\n        field: 'qte',\n        type: 'numeric'\n      }, {\n        title: 'volume',\n        field: 'volume',\n        lookup: {\n          '25 ML': '25 ML',\n          '50 ML': '50 ML',\n          '75 ML': '75 ML',\n          '100 ML': '100 ML'\n        }\n      }],\n      data: [],\n      selectedRow: null,\n      Orderdate: \"\",\n      Category: \"\",\n      Products: \"\",\n      Status: \"\",\n      Comment: \"\",\n      qte: 0,\n      volume: 0,\n      order: \"\",\n      selectedorderpdf: {}\n    };\n\n    this.createAndDownloadPdf = orderno => {\n      axios.post('http://localhost:4000/create-pdf', {\n        id: orderno\n      }).then(() => axios.get('http://localhost:4000/fetch-pdf', {\n        responseType: 'blob'\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: 'application/pdf'\n        });\n        saveAs(pdfBlob, 'commande0000' + orderno + '.pdf');\n      });\n    };\n\n    this.getOrders = _ => {\n      fetch('http://localhost:4000/ordersProduit/list').then(response => response.json()).then(response => this.setState({\n        data: response.data\n      })).catch(err => console.error(err));\n    };\n  }\n\n  componentDidMount() {\n    this.getOrders();\n  }\n\n  render() {\n    return React.createElement(MaterialTable, {\n      icons: tableIcons,\n      title: \"Produit Orders\",\n      columns: this.state.columns,\n      data: this.state.data,\n      actions: [{\n        icon: Refresh,\n        tooltip: 'Refresh',\n        isFreeAction: true,\n        onClick: () => window.location.reload(false)\n      }, {\n        icon: pdf,\n        tooltip: 'Download Pdf',\n        onClick: (event, rowData) => this.createAndDownloadPdf(rowData.Orderno)\n      }, {\n        icon: Check,\n        tooltip: 'submitted',\n        onClick: (event, rowData) => OrderAPI.updateStatus(rowData.Orderno, \"Produit\")\n      }],\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            this.setState(prevState => {\n              const data = [...prevState.data];\n              data.push(newData);\n              return { ...prevState,\n                data\n              };\n            });\n            this.setState({\n              Orderdate: newData.Orderdate\n            });\n            this.setState({\n              Category: newData.Category\n            });\n            this.setState({\n              Products: newData.Products\n            });\n            this.setState({\n              Status: \"Draft\"\n            });\n            this.setState({\n              Comment: newData.Comment\n            });\n            this.setState({\n              qte: newData.qte\n            });\n            this.setState({\n              volume: newData.volume\n            }); // console.info(this.state.order);\n\n            OrderAPI.sendCreate(this.state.Orderdate, this.state.Category, this.state.Products, \"Draft\", this.state.Comment, this.state.qte, this.state.volume, \"Produit\");\n            window.location.reload(false);\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              this.setState(prevState => {\n                const data = [...prevState.data];\n                data[data.indexOf(oldData)] = newData;\n                return { ...prevState,\n                  data\n                };\n              });\n            }\n\n            this.setState({\n              Orderdate: newData.Orderdate\n            });\n            this.setState({\n              Category: newData.Category\n            });\n            this.setState({\n              Products: newData.Products\n            });\n            this.setState({\n              Status: newData.Status\n            });\n            this.setState({\n              Comment: newData.Comment\n            });\n            this.setState({\n              qte: newData.qte\n            });\n            this.setState({\n              volume: newData.volume\n            });\n            OrderAPI.sendUpdate(this.state.Orderdate, this.state.Category, this.state.Products, this.state.Status, this.state.Comment, this.state.qte, this.state.volume, newData.Orderno, \"Produit\");\n            window.location.reload(false);\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            OrderAPI.sendDelete(oldData.Orderno, \"Produit\");\n            window.location.reload(false);\n            this.setState(prevState => {\n              const data = [...prevState.data];\n              data.splice(data.indexOf(oldData), 1);\n              return { ...prevState,\n                data\n              };\n            });\n          }, 600);\n        })\n      },\n      onRowClick: (evt, selectedRow) => this.setState({\n        selectedRow\n      }),\n      options: {\n        headerStyle: {\n          backgroundColor: '#82BFE8',\n          color: '#FFF'\n        },\n        // exportButton: true,\n        filtering: true,\n        grouping: true,\n        sorting: true,\n        rowStyle: rowData => ({\n          backgroundColor: this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id ? '#C7CFDE' : '#FFF'\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default ProduitOrders;","map":{"version":3,"sources":["C:/Users/mamoussa/project/moc/src/views/Orders/OrderManagement/components/ProduitOrders.js"],"names":["React","Component","MaterialTable","axios","forwardRef","saveAs","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","pdf","Order","Refresh","OrderAPI","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","ProduitOrders","state","columns","title","field","editable","cellStyle","backgroundColor","color","headerStyle","type","lookup","Produit","Lentille","Releasy","SkySoft","WaitingValidation","Draft","Validated","Created","Rejected","data","selectedRow","Orderdate","Category","Products","Status","Comment","qte","volume","order","selectedorderpdf","createAndDownloadPdf","orderno","post","id","then","get","responseType","res","pdfBlob","Blob","getOrders","_","fetch","response","json","setState","catch","err","console","error","componentDidMount","render","icon","tooltip","isFreeAction","onClick","window","location","reload","event","rowData","Orderno","updateStatus","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","sendCreate","onRowUpdate","oldData","indexOf","sendUpdate","onRowDelete","sendDelete","splice","evt","filtering","grouping","sorting","rowStyle","tableData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport axios from 'axios';\r\nimport { forwardRef } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n import pdf from '@material-ui/icons/PictureAsPdf';\r\nimport Order from \"./Order\";\r\n import Refresh from '@material-ui/icons/Autorenew';\r\n import * as OrderAPI from \"../api/OrderAPI\"\r\n \r\n \r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    pdf: forwardRef((props, ref) => <pdf {...props} ref={ref} />)\r\n  };\r\n  \r\n class ProduitOrders extends Component {\r\nstate={\r\n  columns: [\r\n    { title: 'Order no', field: 'Orderno' ,editable: 'never' ,cellStyle: {\r\n      backgroundColor: '#B1D9FE',\r\n      color: '#FFF'\r\n    },\r\n    headerStyle: {\r\n      backgroundColor: '#B1D9FE',\r\n    }},\r\n    { title: 'Order date', field: 'Orderdate' , type :\"date\"},\r\n    { title: 'Category', field: 'Category' ,lookup:  {Produit:'Produit',Lentille:'Lentille'} },\r\n    {\r\n      title: 'Products',\r\n      field: 'Products',\r\n      lookup:{Releasy:'Releasy',SkySoft:'SkySoft'}\r\n    },\r\n    {\r\n      title: 'Status',\r\n      field: 'Status',\r\n      editable: 'never',\r\n      lookup:{WaitingValidation:\"Waiting Validation\",Draft:\"Draft\",Validated :\"Validated\" ,Created:\"Created\",Rejected:\"Rejected\"},\r\n      cellStyle: {\r\n        backgroundColor:('yellow') ,\r\n    }},\r\n    {\r\n      title: 'Comment',\r\n      field: 'Comment',\r\n      \r\n    },\r\n    { title: 'Quantity', field: 'qte', type: 'numeric' },\r\n   \r\n    \r\n    { title: 'volume', field: 'volume', lookup:  {\r\n      '25 ML':'25 ML','50 ML':'50 ML','75 ML':'75 ML','100 ML':'100 ML'}},\r\n  ],\r\n  data: [],\r\n  selectedRow: null,\r\n  Orderdate: \"\",\r\n  Category:\"\",\r\n  Products:\"\",\r\n  Status:\"\",\r\n  Comment:\"\",\r\n  qte:0,\r\n  volume:0,\r\n  order:\"\",\r\n  selectedorderpdf:{}\r\n\r\n}\r\ncomponentDidMount(){\r\n  this.getOrders();\r\n\r\n}\r\n\r\n\r\ncreateAndDownloadPdf = (orderno) => {\r\n\r\n  axios.post('http://localhost:4000/create-pdf',{ id:orderno})\r\n    .then(() => axios.get('http://localhost:4000/fetch-pdf', { responseType: 'blob' }))\r\n    .then((res) => {\r\n      const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n\r\n      saveAs(pdfBlob, 'commande0000'+orderno+'.pdf');\r\n    })\r\n}\r\n\r\ngetOrders= _ =>{\r\n  fetch('http://localhost:4000/ordersProduit/list'  )\r\n  .then(response=>response.json())\r\n  .then(response=>this.setState({data:response.data}))\r\n  .catch(err=>console.error(err))\r\n}\r\n  render(){\r\n   \r\n\r\n  return (\r\n    <MaterialTable\r\n    icons={tableIcons}\r\n      title=\"Produit Orders\"\r\n      columns={this.state.columns}\r\n      data={this.state.data}\r\n      \r\n      actions={[\r\n        {icon: Refresh,\r\n            tooltip: 'Refresh',\r\n            isFreeAction: true,\r\n            onClick: () => window.location.reload(false)\r\n          },\r\n           \r\n       {\r\n          icon: pdf,\r\n          tooltip: 'Download Pdf',\r\n          onClick: ( event,rowData) =>this.createAndDownloadPdf(rowData.Orderno)\r\n           \r\n     }\r\n    , \r\n    {\r\n      icon: Check,\r\n      tooltip: 'submitted',\r\n      onClick: (event, rowData) =>OrderAPI.updateStatus(rowData.Orderno,\"Produit\")\r\n       \r\n }\r\n    ]}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n\r\n              this.setState({Orderdate:newData.Orderdate});\r\n              this.setState({Category:newData.Category});\r\n              this.setState({Products:newData.Products});\r\n              this.setState({Status:\"Draft\"});\r\n              this.setState({Comment:newData.Comment});\r\n              this.setState({qte:newData.qte});\r\n              this.setState({volume:newData.volume});\r\n              \r\n              // console.info(this.state.order);\r\n              OrderAPI.sendCreate(this.state.Orderdate,this.state.Category,this.state.Products,\"Draft\",this.state.Comment,this.state.qte,this.state.volume,\"Produit\");\r\n                 \r\n              window.location.reload(false)\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n             \r\n              if (oldData) {\r\n                this.setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n              this.setState({Orderdate:newData.Orderdate});\r\n              this.setState({Category:newData.Category});\r\n              this.setState({Products:newData.Products});\r\n              this.setState({Status:newData.Status});\r\n              this.setState({Comment:newData.Comment});\r\n              this.setState({qte:newData.qte});\r\n              this.setState({volume:newData.volume});\r\n              OrderAPI.sendUpdate(this.state.Orderdate,this.state.Category,this.state.Products,this.state.Status,this.state.Comment,this.state.qte,this.state.volume, newData.Orderno,\"Produit\");\r\n              window.location.reload(false)\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              \r\n              OrderAPI.sendDelete(oldData.Orderno,\"Produit\");\r\n              window.location.reload(false);\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                \r\n                return { ...prevState, data };\r\n              }\r\n              \r\n              \r\n              );\r\n            }, 600);\r\n          }),\r\n          \r\n          \r\n        }}\r\n        \r\n        onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\r\n        \r\n\r\n      options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: '#82BFE8',\r\n          color: '#FFF'\r\n        },\r\n       // exportButton: true,\r\n        filtering: true,\r\n        grouping: true,\r\n        sorting: true,\r\n        \r\n        rowStyle: rowData => ({\r\n          backgroundColor: (this.state.selectedRow && this.state.selectedRow.tableData.id === rowData.tableData.id) ? '#C7CFDE' : '#FFF'\r\n        })\r\n      }}\r\n      \r\n    />\r\n  );\r\n}\r\n }\r\n export default ProduitOrders;"]},"metadata":{},"sourceType":"module"}