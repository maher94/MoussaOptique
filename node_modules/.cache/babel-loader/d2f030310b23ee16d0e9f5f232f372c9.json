{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mamoussa\\\\project\\\\moc\\\\src\\\\views\\\\Account\\\\components\\\\AccountDetails\\\\AccountDetails.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport authHeader from 'services/auth-header';\nimport clsx from 'clsx';\nimport { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from '@material-ui/core';\n\nclass AccountDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.getUserDetails = _ => {\n      const userNamesession = JSON.parse(localStorage.getItem('user'));\n      console.log(userNamesession);\n      fetch('http://localhost:4000/api/user/listByUsername/' + userNamesession.username).then(response => response.json()).then(response => this.setState({\n        data: response.data\n      })).catch(err => console.error(err));\n    };\n  }\n\n  componentDidMount() {\n    this.getUserDetails();\n  }\n\n  UpdateUserProfile(FirstName, LastName, email, PhoneNumber, Adresse, Adresse2, Country, PostalCode) {\n    const userNamesession = JSON.parse(localStorage.getItem('user'));\n    const baseUrl = \"http://localhost:4000/api/user/updateProfile/\" + userNamesession.id;\n    const datapost = {\n      FirstName: FirstName,\n      LastName: LastName,\n      Email: email,\n      PhoneNumber: PhoneNumber,\n      Adresse: Adresse,\n      Adresse2: Adresse2,\n      Country: Country,\n      PostalCode: PostalCode\n    };\n    axios.post(baseUrl, datapost, {\n      headers: authHeader()\n    }).then(response => {\n      if (response.data.success) {\n        alert(response.data.message);\n      } else {\n        alert(\"Error when updating data\");\n      }\n    }).catch(error => {\n      alert(error);\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.UpdateUserProfile(\"\", \"LastName\", \"email\", \"4444\", \"Adresse\", \"Adresse2\", \"Country\", \"22222\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      subheader: \"The information can be edited\",\n      title: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        helperText: \"\",\n        label: \"First name\",\n        margin: \"dense\",\n        name: \"firstName\",\n        required: true,\n        value: user.FirstName,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Last name\",\n        margin: \"dense\",\n        name: \"lastName\",\n        required: true,\n        value: user.Name,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Email Address\",\n        margin: \"dense\",\n        name: \"email\",\n        required: true,\n        value: user.email,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Phone Number\",\n        margin: \"dense\",\n        name: \"phone\",\n        value: user.PhoneNumber,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Adresse 1\",\n        margin: \"dense\",\n        name: \"state\",\n        required: true // eslint-disable-next-line react/jsx-sort-props\n        ,\n        value: user.Adresse,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Adresse 2\",\n        margin: \"dense\",\n        name: \"state\",\n        required: true // eslint-disable-next-line react/jsx-sort-props\n        ,\n        value: user.Adresse2,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Country\",\n        margin: \"dense\",\n        name: \"country\",\n        required: true,\n        value: user.country,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      });\n    })), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.state.data.map(function (user) {\n      return React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Postal Code\",\n        name: \"Postal Code\",\n        required: true,\n        value: user.PostalCode,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      });\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\" //onClick={this.UpdateUserProfile() }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Save details\"))));\n  }\n\n}\n\nexport default AccountDetails;","map":{"version":3,"sources":["C:/Users/mamoussa/project/moc/src/views/Account/components/AccountDetails/AccountDetails.js"],"names":["React","useState","axios","authHeader","clsx","Component","PropTypes","makeStyles","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","AccountDetails","state","data","getUserDetails","_","userNamesession","JSON","parse","localStorage","getItem","console","log","fetch","username","then","response","json","setState","catch","err","error","componentDidMount","UpdateUserProfile","FirstName","LastName","email","PhoneNumber","Adresse","Adresse2","Country","PostalCode","baseUrl","id","datapost","Email","post","headers","success","alert","message","render","map","user","Name","country"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport authHeader from 'services/auth-header';\nimport clsx from 'clsx';\nimport { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField\n} from '@material-ui/core';\nclass AccountDetails extends Component{\n\n  state={\n    data:[],\n\n  }\n\n  componentDidMount(){\n    this.getUserDetails();\n      \n      }\n   getUserDetails= _ =>{\n    const userNamesession = JSON.parse(localStorage.getItem('user'));\n    console.log(userNamesession)\n        fetch('http://localhost:4000/api/user/listByUsername/'+userNamesession.username )\n        .then(response=>response.json())\n        .then(response=>this.setState({data:response.data}))\n        .catch(err=>console.error(err))\n      }\n      UpdateUserProfile(FirstName,LastName,email,PhoneNumber,Adresse,Adresse2,Country,PostalCode) {\n        const userNamesession = JSON.parse(localStorage.getItem('user'));\n       \n        const baseUrl = \"http://localhost:4000/api/user/updateProfile/\"+userNamesession.id\n        const datapost = {\n          FirstName:FirstName,\n          LastName:LastName,\n          Email:email,\n          PhoneNumber:PhoneNumber,\n          Adresse:Adresse,\n          Adresse2:Adresse2,\n          Country:Country,\n          PostalCode:PostalCode\n        \n        }\n      \n        axios.post(baseUrl,datapost,{ headers: authHeader() })\n        .then(response => {\n          if (response.data.success) {\n           alert(response.data.message)\n          }\n          else {\n            alert(\"Error when updating data\")\n           \n          }\n        })\n        .catch ( error => {\n          alert(error)\n          console.log(error)\n        })\n      }\n\n  \n\n      render(){\n         \n       \n        return ( \n         \n    <Card>\n       \n      <form\n        autoComplete=\"off\"\n\n        onSubmit={this.UpdateUserProfile(\"\",\"LastName\",\"email\",\"4444\",\"Adresse\",\"Adresse2\",\"Country\",\"22222\")}\n      >\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n    \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n               {this.state.data.map(function (user) {\n            return (\n            <TextField\n              fullWidth\n              helperText=\"\"\n              label=\"First name\"\n              margin=\"dense\"\n              name=\"firstName\"\n               \n              required\n              value={user.FirstName}\n              variant=\"outlined\"\n            />)})}\n              \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n                {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                \n                required\n                value={user.Name}\n                variant=\"outlined\"\n                />)})}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                 \n                required\n                value={user.email}\n                variant=\"outlined\"\n                />)})}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n               {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                margin=\"dense\"\n                name=\"phone\"\n                value={user.PhoneNumber}\n                variant=\"outlined\"\n                />)})}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n                {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Adresse 1\"\n                margin=\"dense\"\n                name=\"state\"\n                 \n                required\n               \n                // eslint-disable-next-line react/jsx-sort-props\n                \n                value={user.Adresse}\n                variant=\"outlined\"\n                />)})}\n                 \n              \n              \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n                {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Adresse 2\"\n                margin=\"dense\"\n                name=\"state\"\n                 \n                required\n               \n                // eslint-disable-next-line react/jsx-sort-props\n                \n                value={user.Adresse2}\n                variant=\"outlined\"\n                />)})}\n                 \n              \n              \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n                {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Country\"\n                margin=\"dense\"\n                name=\"country\"\n                 \n                required\n                value={user.country}\n                variant=\"outlined\"\n                />)})}\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n                {this.state.data.map(function (user) {\n            return (\n              <TextField\n                fullWidth\n                label=\"Postal Code\"\n                name=\"Postal Code\"\n                 \n                required\n                value={user.PostalCode}\n                variant=\"outlined\"\n                />)})}\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            //onClick={this.UpdateUserProfile() }\n          >\n            Save details\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n       \n            \n       \n    )\n\n  }\n  \n  \n  }\n\nexport default AccountDetails;\n"]},"metadata":{},"sourceType":"module"}